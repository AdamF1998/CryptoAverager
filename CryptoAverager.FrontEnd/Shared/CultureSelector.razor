@inject IConfiguration _configuration
@inject IStringLocalizer<App> _localiser
@inject NavigationManager navigationManager

@if (cultures != null)
{
    <form class="form-inline">
        <select id="language-selector" class="form-control mr-2">
        </select>

        <button class="btn btn-primary" @onclick="SendDotNetInstanceToJs">@_localiser["choose_language_button_text"]</button>
    </form>
}

@code
{
    [Inject]
    protected IJSRuntime JsRunTime { get; set; }

    // Get the current culture for the user
    private string selectedCulture = System.Threading.Thread.CurrentThread.CurrentCulture.Name;

    private Dictionary<string, string> cultures;

    protected override void OnInitialized()
    {
        cultures = _configuration.GetSection("Cultures").GetChildren().ToDictionary(x => x.Key, x => x.Value);
    }

    private async Task SendDotNetInstanceToJs()
    {
        var dotNetObjRef = DotNetObjectReference.Create(this);
        await JsRunTime.InvokeVoidAsync("updateCulture", dotNetObjRef);
    }

    private async Task SetCulture()
    {
        await JsRunTime.InvokeVoidAsync("setLanguageSelector", selectedCulture.Split('-')[1].ToLower());
    }

    [JSInvokable]
    public void RequestCultureChange(string selectedCultureIso)
    {
        var test = selectedCulture;

        var cultureInfo = cultures.Where(x => x.Key.Split('-')[1].ToLower() == selectedCultureIso).SingleOrDefault().Key;

        if (cultureInfo == null)
        {
            return;
        }

        var uri = new Uri(navigationManager.Uri)
            .GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);

        var query = $"?culture={Uri.EscapeDataString(cultureInfo)}&" +
            $"redirectUri={Uri.EscapeDataString(uri)}";

        navigationManager.NavigateTo("/Culture/SetCulture" + query, forceLoad: true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRunTime.InvokeVoidAsync("onBlazorReady");
        }

        await SetCulture();
    }
}



