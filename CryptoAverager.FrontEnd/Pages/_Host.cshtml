@page "/"
@namespace CryptoAverager.FrontEnd.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

@inject Microsoft.Extensions.Configuration.IConfiguration config

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CryptoAverager.FrontEnd</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />

    <link rel="stylesheet" href="/css/countrySelect.min.css">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js" type="text/javascript"></script>
    <script src="/js/countrySelect.min.js"></script>

</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>

    <script>
        function onBlazorReady() {
            // Initialise the custom country select with the cultures I will support
            $("#language-selector").countrySelect({
                onlyCountries: ['us', 'cn', 'ro', 'ru', 'gb', 'no'],
                responseDropdown: true
            });

            var countryData = null;

            $('#language-selector').on('change', function () {

                countryData = $("#language-selector").countrySelect("getSelectedCountryData");
            });

            // Once the user has chosen a language then we need to update the cookie with the correct culture
            window.updateCulture = (dotnetObjRef) => {
                dotnetObjRef.invokeMethodAsync("RequestCultureChange", countryData.iso2);
            }

            // Set the country to the user's culture on-load
            window.setLanguageSelector = (selectedCulture) => {
                $("#language-selector").countrySelect("selectCountry", selectedCulture);
            }
        };

    </script>
</body>
</html>
